{"ast":null,"code":"var _jsxFileName = \"/Users/iremakcay/Projects/stock/src/Forex/Forex.js\";\nimport React, { Component } from \"react\";\nimport Calculator from \"./Calculator\";\nimport axios from \"axios\";\nexport default class Forex extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currencyA: \"USD\",\n      currencyB: \"EUR\",\n      valueA: 1,\n      valueB: 0,\n      rates: [],\n      ratesAreLoading: true\n    };\n\n    this.getExchangeRates = async val => {\n      try {\n        const res = await axios(`https://www.worldtradingdata.com/api/v1/forex?base=${val}&sort=newest&api_token=${this.props.apiKey}`);\n        const data = res.data.data;\n        this.setState({\n          valueB: data[this.state.currencyB],\n          rates: data,\n          ratesAreLoading: false\n        }); // console.log(data);\n      } catch (err) {\n        console.log(\"Error fetching stock data\", err);\n      }\n    };\n\n    this.onSelectCurrency = val => {\n      const {\n        valueA,\n        rates\n      } = this.state;\n      this.setState({\n        currencyB: val,\n        valueB: (valueA * rates[val]).toFixed(6)\n      });\n    };\n\n    this.handleInputChange = (e, input) => {\n      const {\n        currencyB,\n        rates\n      } = this.state;\n      const rate = rates[currencyB];\n\n      if (input === \"A\") {\n        const newValue = e.target.value;\n        this.setState({\n          valueA: newValue,\n          valueB: (newValue * rate).toFixed(6)\n        });\n      }\n\n      if (input === \"B\") {\n        const newValue = e.target.value;\n        this.setState({\n          valueB: newValue,\n          valueA: (newValue / rate).toFixed(6)\n        });\n      }\n    };\n  }\n\n  // fetch the current exchange rates when the page loads\n  componentDidMount() {\n    this.getExchangeRates(this.state.currencyA);\n  } // use axios to fetch the exchange rates for the input value (USD)\n\n\n  render() {\n    const {\n      valueA,\n      valueB,\n      currencyA,\n      currencyB,\n      ratesAreLoading,\n      rates\n    } = this.state;\n    if (ratesAreLoading) return null;\n    return React.createElement(\"div\", {\n      className: \"forex-grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"forex-grid__heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Exchange Rate Calculator\")), React.createElement(\"div\", {\n      className: \"forex-grid__calculator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Calculator, {\n      onSelectCurrency: this.onSelectCurrency,\n      handleInputChange: this.handleInputChange,\n      valueA: valueA,\n      valueB: valueB,\n      ratesAreLoading: ratesAreLoading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"forex-grid__exchange-rate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, `1 ${currencyA} equals ${rates[currencyB]} ${currencyB}.`)));\n  }\n\n}","map":{"version":3,"sources":["/Users/iremakcay/Projects/stock/src/Forex/Forex.js"],"names":["React","Component","Calculator","axios","Forex","state","currencyA","currencyB","valueA","valueB","rates","ratesAreLoading","getExchangeRates","val","res","props","apiKey","data","setState","err","console","log","onSelectCurrency","toFixed","handleInputChange","e","input","rate","newValue","target","value","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Calculator from \"./Calculator\";\nimport axios from \"axios\";\nexport default class Forex extends Component {\n  state = {\n    currencyA: \"USD\",\n    currencyB: \"EUR\",\n    valueA: 1,\n    valueB: 0,\n    rates: [],\n    ratesAreLoading: true\n  };\n\n  // fetch the current exchange rates when the page loads\n  componentDidMount() {\n    this.getExchangeRates(this.state.currencyA);\n  }\n\n  // use axios to fetch the exchange rates for the input value (USD)\n  getExchangeRates = async val => {\n    try {\n      const res = await axios(\n        `https://www.worldtradingdata.com/api/v1/forex?base=${val}&sort=newest&api_token=${this.props.apiKey}`\n      );\n      const data = res.data.data;\n      this.setState({\n        valueB: data[this.state.currencyB],\n        rates: data,\n        ratesAreLoading: false\n      });\n      // console.log(data);\n    } catch (err) {\n      console.log(\"Error fetching stock data\", err);\n    }\n  };\n\n  // set currency B rate and value of input B when the selector is changed\n  onSelectCurrency = val => {\n    const { valueA, rates } = this.state;\n    this.setState({ currencyB: val, valueB: (valueA * rates[val]).toFixed(6) });\n  };\n\n  // calculate the value of the other input on input change\n  handleInputChange = (e, input) => {\n    const { currencyB, rates } = this.state;\n    const rate = rates[currencyB];\n    if (input === \"A\") {\n      const newValue = e.target.value;\n      this.setState({\n        valueA: newValue,\n        valueB: (newValue * rate).toFixed(6)\n      });\n    }\n    if (input === \"B\") {\n      const newValue = e.target.value;\n      this.setState({\n        valueB: newValue,\n        valueA: (newValue / rate).toFixed(6)\n      });\n    }\n  };\n\n  render() {\n    const {\n      valueA,\n      valueB,\n      currencyA,\n      currencyB,\n      ratesAreLoading,\n      rates\n    } = this.state;\n    if (ratesAreLoading) return null;\n    return (\n      <div className=\"forex-grid\">\n        <div className=\"forex-grid__heading\">\n          <h2>Exchange Rate Calculator</h2>\n        </div>\n        <div className=\"forex-grid__calculator\">\n          <Calculator\n            onSelectCurrency={this.onSelectCurrency}\n            handleInputChange={this.handleInputChange}\n            valueA={valueA}\n            valueB={valueB}\n            ratesAreLoading={ratesAreLoading}\n          />\n        </div>\n        <div className=\"forex-grid__exchange-rate\">\n          <p>{`1 ${currencyA} equals ${rates[currencyB]} ${currencyB}.`}</p>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}