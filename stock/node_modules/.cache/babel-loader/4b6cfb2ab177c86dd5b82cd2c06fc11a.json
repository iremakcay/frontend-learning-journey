{"ast":null,"code":"var _jsxFileName = \"/Users/iremakcay/Projects/stock/src/Chart/Chart.js\";\nimport React, { useRef, useEffect } from \"react\";\nimport { Chart } from \"chart.js\";\nimport \"./Chart.css\";\n\nconst generateChartOptions = ({\n  labels,\n  prices\n}) => ({\n  // The type of chart we want to create\n  type: \"bar\",\n  data: {\n    labels,\n    datasets: [{\n      label: \"# of Votes\",\n      data: prices,\n      backgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(54, 162, 235, 0.2)\", \"rgba(255, 206, 86, 0.2)\", \"rgba(75, 192, 192, 0.2)\"],\n      borderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\", \"rgba(255, 206, 86, 1)\", \"rgba(75, 192, 192, 1)\"],\n      borderWidth: 1\n    }]\n  },\n  // Configuration options go here\n  options: {}\n});\n\nfunction ChartComponent({\n  prices,\n  labels\n}) {\n  const canvasElement = useRef(null);\n  const chartOptions = generateChartOptions({\n    prices,\n    labels\n  });\n  useEffect(() => {\n    document.title = `You clicked 1 times`;\n    new Chart(canvasElement.current, chartOptions);\n  });\n  return React.createElement(\"canvas\", {\n    ref: canvasElement,\n    id: \"myChart\",\n    width: \"400\",\n    height: \"400\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  });\n}\n\nexport default ChartComponent;\n/**\n * - Chart option create\n * - init chart\n * - useEffect to wait canvas render\n * -\n *\n */","map":{"version":3,"sources":["/Users/iremakcay/Projects/stock/src/Chart/Chart.js"],"names":["React","useRef","useEffect","Chart","generateChartOptions","labels","prices","type","data","datasets","label","backgroundColor","borderColor","borderWidth","options","ChartComponent","canvasElement","chartOptions","document","title","current"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,OAAO,aAAP;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,MAAyB;AACpD;AACAC,EAAAA,IAAI,EAAE,KAF8C;AAGpDC,EAAAA,IAAI,EAAE;AACJH,IAAAA,MADI;AAEJI,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,YADT;AAEEF,MAAAA,IAAI,EAAEF,MAFR;AAGEK,MAAAA,eAAe,EAAE,CACf,yBADe,EAEf,yBAFe,EAGf,yBAHe,EAIf,yBAJe,CAHnB;AASEC,MAAAA,WAAW,EAAE,CACX,uBADW,EAEX,uBAFW,EAGX,uBAHW,EAIX,uBAJW,CATf;AAeEC,MAAAA,WAAW,EAAE;AAff,KADQ;AAFN,GAH8C;AAyBpD;AACAC,EAAAA,OAAO,EAAE;AA1B2C,CAAzB,CAA7B;;AA6BA,SAASC,cAAT,CAAwB;AAAET,EAAAA,MAAF;AAAUD,EAAAA;AAAV,CAAxB,EAA4C;AAC1C,QAAMW,aAAa,GAAGf,MAAM,CAAC,IAAD,CAA5B;AACA,QAAMgB,YAAY,GAAGb,oBAAoB,CAAC;AAAEE,IAAAA,MAAF;AAAUD,IAAAA;AAAV,GAAD,CAAzC;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,QAAQ,CAACC,KAAT,GAAkB,qBAAlB;AACA,QAAIhB,KAAJ,CAAUa,aAAa,CAACI,OAAxB,EAAiCH,YAAjC;AACD,GAHQ,CAAT;AAKA,SACE;AAAQ,IAAA,GAAG,EAAED,aAAb;AAA4B,IAAA,EAAE,EAAC,SAA/B;AAAyC,IAAA,KAAK,EAAC,KAA/C;AAAqD,IAAA,MAAM,EAAC,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD;;AAED,eAAeD,cAAf;AAEA","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport { Chart } from \"chart.js\";\nimport \"./Chart.css\";\n\nconst generateChartOptions = ({ labels, prices }) => ({\n  // The type of chart we want to create\n  type: \"bar\",\n  data: {\n    labels,\n    datasets: [\n      {\n        label: \"# of Votes\",\n        data: prices,\n        backgroundColor: [\n          \"rgba(255, 99, 132, 0.2)\",\n          \"rgba(54, 162, 235, 0.2)\",\n          \"rgba(255, 206, 86, 0.2)\",\n          \"rgba(75, 192, 192, 0.2)\"\n        ],\n        borderColor: [\n          \"rgba(255, 99, 132, 1)\",\n          \"rgba(54, 162, 235, 1)\",\n          \"rgba(255, 206, 86, 1)\",\n          \"rgba(75, 192, 192, 1)\"\n        ],\n        borderWidth: 1\n      }\n    ]\n  },\n  // Configuration options go here\n  options: {}\n});\n\nfunction ChartComponent({ prices, labels }) {\n  const canvasElement = useRef(null);\n  const chartOptions = generateChartOptions({ prices, labels });\n\n  useEffect(() => {\n    document.title = `You clicked 1 times`;\n    new Chart(canvasElement.current, chartOptions);\n  });\n\n  return (\n    <canvas ref={canvasElement} id=\"myChart\" width=\"400\" height=\"400\"></canvas>\n  );\n}\n\nexport default ChartComponent;\n\n/**\n * - Chart option create\n * - init chart\n * - useEffect to wait canvas render\n * -\n *\n */\n"]},"metadata":{},"sourceType":"module"}