{"ast":null,"code":"var _jsxFileName = \"/Users/iremakcay/Projects/stock/src/Markets/Markets.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nexport default class Markets extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      featuredIsLoading: true,\n      featuredStockSymbols: \"^DJI,^SP400,^IXIC\",\n      featuredStocks: []\n    };\n\n    this.componentDidMount = () => {\n      const weatherURL = `http://api.openweathermap.org/data/2.5/forecast?zip=11102&units=imperial&APPID=133b123303e18a9b0202f0978339b8b9`;\n      fetch(weatherURL);\n    };\n\n    this.getFeaturedStocks = async symbols => {\n      try {\n        const res = await axios(`https://www.worldtradingdata.com/api/v1/stock?symbol=SNAP&api_token=demo`);\n        const featuredStocks = res.data.data;\n        this.setState({\n          featuredStocks,\n          featuredIsLoading: false\n        });\n        console.log(featuredStocks);\n      } catch (err) {\n        console.log(\"Error fetching featured stocks\", err);\n      }\n    };\n  }\n\n  render() {\n    const {\n      featuredStocks\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"markets-grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"stocks\", featuredStocks);\n  }\n\n}\nMarkets.propTypes = {\n  upColor: PropTypes.string.isRequired,\n  downColor: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/Users/iremakcay/Projects/stock/src/Markets/Markets.js"],"names":["React","Component","axios","PropTypes","Markets","state","featuredIsLoading","featuredStockSymbols","featuredStocks","componentDidMount","weatherURL","fetch","getFeaturedStocks","symbols","res","data","setState","console","log","err","render","propTypes","upColor","string","isRequired","downColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,eAAe,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAM7CI,KAN6C,GAMrC;AACNC,MAAAA,iBAAiB,EAAE,IADb;AAENC,MAAAA,oBAAoB,EAAE,mBAFhB;AAGNC,MAAAA,cAAc,EAAE;AAHV,KANqC;;AAAA,SAiB7CC,iBAjB6C,GAiBzB,MAAM;AACxB,YAAMC,UAAU,GAAI,iHAApB;AACAC,MAAAA,KAAK,CAACD,UAAD,CAAL;AACD,KApB4C;;AAAA,SAsB7CE,iBAtB6C,GAsBzB,MAAMC,OAAN,IAAiB;AACnC,UAAI;AACF,cAAMC,GAAG,GAAG,MAAMZ,KAAK,CACpB,0EADoB,CAAvB;AAGA,cAAMM,cAAc,GAAGM,GAAG,CAACC,IAAJ,CAASA,IAAhC;AACA,aAAKC,QAAL,CAAc;AAAER,UAAAA,cAAF;AAAkBF,UAAAA,iBAAiB,EAAE;AAArC,SAAd;AACAW,QAAAA,OAAO,CAACC,GAAR,CAAYV,cAAZ;AACD,OAPD,CAOE,OAAOW,GAAP,EAAY;AACZF,QAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CC,GAA9C;AACD;AACF,KAjC4C;AAAA;;AAkC7CC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEZ,MAAAA;AAAF,QAAqB,KAAKH,KAAhC;AAEA,WAAO;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAqCG,cAArC,CAAP;AACD;;AAtC4C;AAA1BJ,O,CACZiB,S,GAAY;AACjBC,EAAAA,OAAO,EAAEnB,SAAS,CAACoB,MAAV,CAAiBC,UADT;AAEjBC,EAAAA,SAAS,EAAEtB,SAAS,CAACoB,MAAV,CAAiBC;AAFX,C","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nexport default class Markets extends Component {\n  static propTypes = {\n    upColor: PropTypes.string.isRequired,\n    downColor: PropTypes.string.isRequired\n  };\n\n  state = {\n    featuredIsLoading: true,\n    featuredStockSymbols: \"^DJI,^SP400,^IXIC\",\n    featuredStocks: []\n  };\n\n  // get the stock indexes info when the page loads\n  /*componentDidMount() {\n    this.getFeaturedStocks(this.state.featuredStockSymbols);\n  }\n*/\n  componentDidMount = () => {\n    const weatherURL = `http://api.openweathermap.org/data/2.5/forecast?zip=11102&units=imperial&APPID=133b123303e18a9b0202f0978339b8b9`;\n    fetch(weatherURL);\n  };\n  // fetch info for the featuredStockSymbols\n  getFeaturedStocks = async symbols => {\n    try {\n      const res = await axios(\n        `https://www.worldtradingdata.com/api/v1/stock?symbol=SNAP&api_token=demo`\n      );\n      const featuredStocks = res.data.data;\n      this.setState({ featuredStocks, featuredIsLoading: false });\n      console.log(featuredStocks);\n    } catch (err) {\n      console.log(\"Error fetching featured stocks\", err);\n    }\n  };\n  render() {\n    const { featuredStocks } = this.state;\n\n    return <div className=\"markets-grid\">stocks{featuredStocks}</div>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}