{"ast":null,"code":"var _jsxFileName = \"/Users/iremakcay/Projects/stock/src/Chart/Chart.js\";\nimport React, { useRef, useEffect } from \"react\";\nimport { Chart } from \"chart.js\";\nimport \"./Chart.css\";\n\nfunction ChartComponent(props) {\n  console.log(props);\n  const {\n    prices,\n    labels\n  } = props;\n  let chart;\n  const canvasElement = useRef(null);\n\n  const onLoad = () => {\n    initChart(canvasElement.current, prices, labels);\n  };\n\n  function initChart(element, prices, labels) {\n    chart = new Chart(element, {\n      // The type of chart we want to create\n      type: \"bar\",\n      data: {\n        labels: labels,\n        datasets: [{\n          label: \"# of Votes\",\n          data: prices,\n          backgroundColor: [\"rgba(255, 99, 132, 0.2)\", \"rgba(54, 162, 235, 0.2)\", \"rgba(255, 206, 86, 0.2)\", \"rgba(75, 192, 192, 0.2)\"],\n          borderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\", \"rgba(255, 206, 86, 1)\", \"rgba(75, 192, 192, 1)\"],\n          borderWidth: 1\n        }]\n      },\n      // Configuration options go here\n      options: {}\n    });\n  }\n\n  useEffect(() => {\n    onLoad();\n  }, [chart]);\n  return React.createElement(\"canvas\", {\n    ref: canvasElement,\n    id: \"myChart\",\n    width: \"400\",\n    height: \"400\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  });\n}\n\nexport default ChartComponent;","map":{"version":3,"sources":["/Users/iremakcay/Projects/stock/src/Chart/Chart.js"],"names":["React","useRef","useEffect","Chart","ChartComponent","props","console","log","prices","labels","chart","canvasElement","onLoad","initChart","current","element","type","data","datasets","label","backgroundColor","borderColor","borderWidth","options"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,OAAO,aAAP;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAM;AAAEG,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAqBJ,KAA3B;AACA,MAAIK,KAAJ;AACA,QAAMC,aAAa,GAAGV,MAAM,CAAC,IAAD,CAA5B;;AAEA,QAAMW,MAAM,GAAG,MAAM;AACnBC,IAAAA,SAAS,CAACF,aAAa,CAACG,OAAf,EAAwBN,MAAxB,EAAgCC,MAAhC,CAAT;AACD,GAFD;;AAIA,WAASI,SAAT,CAAmBE,OAAnB,EAA4BP,MAA5B,EAAoCC,MAApC,EAA4C;AAC1CC,IAAAA,KAAK,GAAG,IAAIP,KAAJ,CAAUY,OAAV,EAAmB;AACzB;AACAC,MAAAA,IAAI,EAAE,KAFmB;AAGzBC,MAAAA,IAAI,EAAE;AACJR,QAAAA,MAAM,EAAEA,MADJ;AAEJS,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,YADT;AAEEF,UAAAA,IAAI,EAAET,MAFR;AAGEY,UAAAA,eAAe,EAAE,CACf,yBADe,EAEf,yBAFe,EAGf,yBAHe,EAIf,yBAJe,CAHnB;AASEC,UAAAA,WAAW,EAAE,CACX,uBADW,EAEX,uBAFW,EAGX,uBAHW,EAIX,uBAJW,CATf;AAeEC,UAAAA,WAAW,EAAE;AAff,SADQ;AAFN,OAHmB;AAyBzB;AACAC,MAAAA,OAAO,EAAE;AA1BgB,KAAnB,CAAR;AA4BD;;AAEDrB,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,MAAM;AACP,GAFQ,EAEN,CAACF,KAAD,CAFM,CAAT;AAIA,SACE;AAAQ,IAAA,GAAG,EAAEC,aAAb;AAA4B,IAAA,EAAE,EAAC,SAA/B;AAAyC,IAAA,KAAK,EAAC,KAA/C;AAAqD,IAAA,MAAM,EAAC,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD;;AAED,eAAeP,cAAf","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport { Chart } from \"chart.js\";\nimport \"./Chart.css\";\n\nfunction ChartComponent(props) {\n  console.log(props);\n  const { prices, labels } = props;\n  let chart;\n  const canvasElement = useRef(null);\n\n  const onLoad = () => {\n    initChart(canvasElement.current, prices, labels);\n  };\n\n  function initChart(element, prices, labels) {\n    chart = new Chart(element, {\n      // The type of chart we want to create\n      type: \"bar\",\n      data: {\n        labels: labels,\n        datasets: [\n          {\n            label: \"# of Votes\",\n            data: prices,\n            backgroundColor: [\n              \"rgba(255, 99, 132, 0.2)\",\n              \"rgba(54, 162, 235, 0.2)\",\n              \"rgba(255, 206, 86, 0.2)\",\n              \"rgba(75, 192, 192, 0.2)\"\n            ],\n            borderColor: [\n              \"rgba(255, 99, 132, 1)\",\n              \"rgba(54, 162, 235, 1)\",\n              \"rgba(255, 206, 86, 1)\",\n              \"rgba(75, 192, 192, 1)\"\n            ],\n            borderWidth: 1\n          }\n        ]\n      },\n      // Configuration options go here\n      options: {}\n    });\n  }\n\n  useEffect(() => {\n    onLoad();\n  }, [chart]);\n\n  return (\n    <canvas ref={canvasElement} id=\"myChart\" width=\"400\" height=\"400\"></canvas>\n  );\n}\n\nexport default ChartComponent;\n"]},"metadata":{},"sourceType":"module"}