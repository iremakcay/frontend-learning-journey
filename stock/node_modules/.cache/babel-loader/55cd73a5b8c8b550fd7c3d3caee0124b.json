{"ast":null,"code":"var _jsxFileName = \"/Users/iremakcay/Projects/stock/src/Markets/Markets.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nexport default class Markets extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      featuredIsLoading: true,\n      featuredStockSymbols: \"^DJI,^SP400,^IXIC\",\n      featuredStocks: []\n    };\n\n    this.componentDidMount = () => {\n      const weatherURL = `http://api.openweathermap.org/data/2.5/forecast?zip=11102&units=imperial&APPID=133b123303e18a9b0202f0978339b8b9`;\n      fetch(weatherURL).then(res => res.json()).then(data => {\n        const dailyData = data.list.filter(reading => reading.dt_txt.includes(\"18:00:00\"));\n        const city = data.city;\n        this.setState({\n          fullData: data.list,\n          dailyData: dailyData,\n          city: city.name\n        }, () => console.log(this.state));\n      });\n    };\n\n    this.getFeaturedStocks = async symbols => {\n      try {\n        const res = await axios(`https://www.worldtradingdata.com/api/v1/stock?symbol=SNAP&api_token=demo`);\n        const featuredStocks = res.data.data;\n        this.setState({\n          featuredStocks,\n          featuredIsLoading: false\n        });\n        console.log(featuredStocks);\n      } catch (err) {\n        console.log(\"Error fetching featured stocks\", err);\n      }\n    };\n  }\n\n  render() {\n    const {\n      featuredStocks\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"markets-grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"stocks\", featuredStocks);\n  }\n\n}\nMarkets.propTypes = {\n  upColor: PropTypes.string.isRequired,\n  downColor: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/Users/iremakcay/Projects/stock/src/Markets/Markets.js"],"names":["React","Component","axios","PropTypes","Markets","state","featuredIsLoading","featuredStockSymbols","featuredStocks","componentDidMount","weatherURL","fetch","then","res","json","data","dailyData","list","filter","reading","dt_txt","includes","city","setState","fullData","name","console","log","getFeaturedStocks","symbols","err","render","propTypes","upColor","string","isRequired","downColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,eAAe,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAM7CI,KAN6C,GAMrC;AACNC,MAAAA,iBAAiB,EAAE,IADb;AAENC,MAAAA,oBAAoB,EAAE,mBAFhB;AAGNC,MAAAA,cAAc,EAAE;AAHV,KANqC;;AAAA,SAiB7CC,iBAjB6C,GAiBzB,MAAM;AACxB,YAAMC,UAAU,GAAI,iHAApB;AACAC,MAAAA,KAAK,CAACD,UAAD,CAAL,CACGE,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZ,cAAMC,SAAS,GAAGD,IAAI,CAACE,IAAL,CAAUC,MAAV,CAAiBC,OAAO,IACxCA,OAAO,CAACC,MAAR,CAAeC,QAAf,CAAwB,UAAxB,CADgB,CAAlB;AAGA,cAAMC,IAAI,GAAGP,IAAI,CAACO,IAAlB;AACA,aAAKC,QAAL,CACE;AACEC,UAAAA,QAAQ,EAAET,IAAI,CAACE,IADjB;AAEED,UAAAA,SAAS,EAAEA,SAFb;AAGEM,UAAAA,IAAI,EAAEA,IAAI,CAACG;AAHb,SADF,EAME,MAAMC,OAAO,CAACC,GAAR,CAAY,KAAKtB,KAAjB,CANR;AAQD,OAfH;AAgBD,KAnC4C;;AAAA,SAqC7CuB,iBArC6C,GAqCzB,MAAMC,OAAN,IAAiB;AACnC,UAAI;AACF,cAAMhB,GAAG,GAAG,MAAMX,KAAK,CACpB,0EADoB,CAAvB;AAGA,cAAMM,cAAc,GAAGK,GAAG,CAACE,IAAJ,CAASA,IAAhC;AACA,aAAKQ,QAAL,CAAc;AAAEf,UAAAA,cAAF;AAAkBF,UAAAA,iBAAiB,EAAE;AAArC,SAAd;AACAoB,QAAAA,OAAO,CAACC,GAAR,CAAYnB,cAAZ;AACD,OAPD,CAOE,OAAOsB,GAAP,EAAY;AACZJ,QAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CG,GAA9C;AACD;AACF,KAhD4C;AAAA;;AAiD7CC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEvB,MAAAA;AAAF,QAAqB,KAAKH,KAAhC;AAEA,WAAO;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAqCG,cAArC,CAAP;AACD;;AArD4C;AAA1BJ,O,CACZ4B,S,GAAY;AACjBC,EAAAA,OAAO,EAAE9B,SAAS,CAAC+B,MAAV,CAAiBC,UADT;AAEjBC,EAAAA,SAAS,EAAEjC,SAAS,CAAC+B,MAAV,CAAiBC;AAFX,C","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\";\nexport default class Markets extends Component {\n  static propTypes = {\n    upColor: PropTypes.string.isRequired,\n    downColor: PropTypes.string.isRequired\n  };\n\n  state = {\n    featuredIsLoading: true,\n    featuredStockSymbols: \"^DJI,^SP400,^IXIC\",\n    featuredStocks: []\n  };\n\n  // get the stock indexes info when the page loads\n  /*componentDidMount() {\n    this.getFeaturedStocks(this.state.featuredStockSymbols);\n  }\n*/\n  componentDidMount = () => {\n    const weatherURL = `http://api.openweathermap.org/data/2.5/forecast?zip=11102&units=imperial&APPID=133b123303e18a9b0202f0978339b8b9`;\n    fetch(weatherURL)\n      .then(res => res.json())\n      .then(data => {\n        const dailyData = data.list.filter(reading =>\n          reading.dt_txt.includes(\"18:00:00\")\n        );\n        const city = data.city;\n        this.setState(\n          {\n            fullData: data.list,\n            dailyData: dailyData,\n            city: city.name\n          },\n          () => console.log(this.state)\n        );\n      });\n  };\n  // fetch info for the featuredStockSymbols\n  getFeaturedStocks = async symbols => {\n    try {\n      const res = await axios(\n        `https://www.worldtradingdata.com/api/v1/stock?symbol=SNAP&api_token=demo`\n      );\n      const featuredStocks = res.data.data;\n      this.setState({ featuredStocks, featuredIsLoading: false });\n      console.log(featuredStocks);\n    } catch (err) {\n      console.log(\"Error fetching featured stocks\", err);\n    }\n  };\n  render() {\n    const { featuredStocks } = this.state;\n\n    return <div className=\"markets-grid\">stocks{featuredStocks}</div>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}